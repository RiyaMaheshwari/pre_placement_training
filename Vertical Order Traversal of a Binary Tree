class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int,map<int,multiset<int>>>nodes;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});

        while(!q.empty())
        {
            auto x=q.front();
            q.pop();
            TreeNode* node=x.first;
            int n=x.second.first;
            int m=x.second.second;
            nodes[n][m].insert(node->val);
            if(node->left)
            q.push({node->left,{n-1,m+1}});
            if(node->right)
            q.push({node->right,{n+1,m+1}});
        }

        vector<vector<int>> ans;
        for(auto i:nodes)
        {
            vector<int> col;
            for(auto j:i.second)
            {
                col.insert(col.end(),j.second.begin(),j.second.end());
            }
            ans.push_back(col);
        }
        return ans;
    }
};
