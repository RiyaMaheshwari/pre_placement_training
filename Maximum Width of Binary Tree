class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        if(root==NULL)
        return 0;
        queue<pair<TreeNode*,long long>>q;
        int width=0;
        q.push({root,0});
        while(!q.empty())
        {
            int size=q.size();
            //TreeNode* node=q.front().first;
            int min=q.front().second;
            int first,last;
            for(int i=0; i<size; i++)
            {
                long long curr=q.front().second-min;
                TreeNode* node=q.front().first;
                q.pop();
                if(i==0)
                first=curr;
                if(i==size-1)
                last=curr;
                if(node->left)
                q.push({node->left,(curr*2)+1});
                if(node->right)
                q.push({node->right,(curr*2)+2});
            }
            width=max(width,last-first+1);
        }
        return width;
    }
};
